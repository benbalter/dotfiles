#!/bin/sh

set -e

title () {
  echo "\n"
  echo "-------------------------------"
  echo "$1..."
  echo "-------------------------------"
  echo "\n"
}

link() {
  username=$(whoami)
  if [ ! -f ~/$1 ] || [ $(ls -l ~/$1 | awk '{print $11}') != "/Users/$username/.files/$1" ]; then
    echo "Linking ~/$1 to ~/.files/$1"
    rm -f ~/$1
    ln -sf ~/.files/$1 ~/$1
  fi
}

mkdir_safe() {
  if [ ! -d ~/$1 ]; then
    echo "Creating $1 directory"
    mkdir ~/$1
  fi
}

if [ "$TRAVIS" != "true" ]; then
  sudo -v
else
  sudo -n -v
fi

if [ ! -d ~/.oh-my-zsh ] && [ "$TRAVIS" != "true" ]; then
  title "Setting up zsh"
  sh -c "$(wget https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)"

  # Remove default .zshrc file so we can link our own
  rm -f ~/.zshrc

  # Set ZSH as the default shell
  command -v zsh | sudo -n tee -a /etc/shells
  sudo -n chsh -s "$(command -v zsh)" "${USER}"
  export SHELL=$(which zsh)

  # Iterm shell integration
  curl -L https://iterm2.com/misc/install_shell_integration.sh | bash
fi

title "Setting up home directory"
link .bash_profile
link .gitconfig
link .gitignore
link .irbrc
link .zshrc
link .Brewfile
link .gemrc
link Library/LaunchAgents/com.balter.ben.tmpreaper.plist
link Library/LaunchAgents/com.balter.ben.update.plist
mkdir_safe projects
mkdir_safe github

source ~/.bash_profile

if ! type "brew" > /dev/null; then
  echo "Please run strap first. https://github.com/mikemcquaid/strap"
  exit 1
fi

title "Setting up Ruby"
brew install rbenv
if [ $(rbenv global) = "system" ]; then
  latest=$(rbenv install -l | grep -v - | tail -1 )
  latest="$(echo "${latest}" | tr -d '[[:space:]]')"
  rbenv install $latest
  rbenv global $latest
  rbenv rehash
fi
gem install bundler

title "Setting up Homebrew"
if ! brew bundle check --global; then
  brew bundle install --global
fi

title "Configuring OS X"
defaults write com.apple.dock wvous-br-corner -int 5
defaults write com.apple.dock autohide -bool true
defaults write NSGlobalDomain NSAutomaticQuoteSubstitutionEnabled -bool false
defaults write NSGlobalDomain NSAutomaticDashSubstitutionEnabled -bool false
defaults write com.apple.screensaver askForPassword -int 1
defaults write com.apple.screensaver askForPasswordDelay -int 0
defaults write com.apple.screencapture location -string "${HOME}/Desktop"
defaults write com.apple.screencapture type -string "png"
defaults write com.apple.screencapture disable-shadow -bool true
/usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
defaults write com.apple.finder EmptyTrashSecurely -bool true
defaults write com.google.Chrome AppleEnableSwipeNavigateWithScrolls -bool false
defaults write com.apple.Safari \
  com.apple.Safari.ContentPageGroupIdentifier.WebKit2JavaEnabled \
  -bool false
defaults write com.apple.Safari \
  com.apple.Safari.ContentPageGroupIdentifier.WebKit2JavaEnabledForLocalFiles \
  -bool false
touch ~/.hushlogin

if [ -d ~/Dropbox/Desktop ] && [ ! -L ~/Dropbox/Desktop ]; then
  title "Setting up dropbox"
  cp ~/Dropbox/Desktop/* ~/Desktop
  rm -Rf ~/Dropbox/Desktop/
  ln -s ~/Desktop ~/Dropbox/Desktop
fi

title "Setting up atom"
link .atom/config.cson
apm install --packages-file ~/.files/.atom/packages.txt

echo "Fin."
